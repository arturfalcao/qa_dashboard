import { MigrationInterface, QueryRunner } from "typeorm";

export class AddDppFieldsToLots1758850031310 implements MigrationInterface {
    name = 'AddDppFieldsToLots1758850031310'

    public async up(queryRunner: QueryRunner): Promise<void> {
        // Drop constraints if they exist
        await queryRunner.query(`ALTER TABLE "factories" DROP CONSTRAINT IF EXISTS "factories_client_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "photos" DROP CONSTRAINT IF EXISTS "photos_defect_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "defects" DROP CONSTRAINT IF EXISTS "defects_defect_type_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "defects" DROP CONSTRAINT IF EXISTS "defects_inspection_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "inspections" DROP CONSTRAINT IF EXISTS "inspections_inspector_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "inspections" DROP CONSTRAINT IF EXISTS "inspections_lot_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "approvals" DROP CONSTRAINT IF EXISTS "approvals_approved_by_fkey"`);
        await queryRunner.query(`ALTER TABLE "approvals" DROP CONSTRAINT IF EXISTS "approvals_lot_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "activities" DROP CONSTRAINT IF EXISTS "activities_lot_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP CONSTRAINT IF EXISTS "reports_lot_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP CONSTRAINT IF EXISTS "reports_client_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "lots" DROP CONSTRAINT IF EXISTS "lots_factory_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "lots" DROP CONSTRAINT IF EXISTS "lots_client_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "events" DROP CONSTRAINT IF EXISTS "events_lot_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "events" DROP CONSTRAINT IF EXISTS "events_client_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "user_roles" DROP CONSTRAINT IF EXISTS "user_roles_role_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "user_roles" DROP CONSTRAINT IF EXISTS "user_roles_user_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT IF EXISTS "users_client_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "notifications" DROP CONSTRAINT IF EXISTS "notifications_user_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "notifications" DROP CONSTRAINT IF EXISTS "notifications_client_id_fkey"`);
        await queryRunner.query(`ALTER TABLE "dpp_events" DROP CONSTRAINT IF EXISTS "fk_dpp_events_dpp"`);
        await queryRunner.query(`ALTER TABLE "dpp_access_logs" DROP CONSTRAINT IF EXISTS "fk_dpp_access_logs_dpp"`);
        await queryRunner.query(`ALTER TABLE "dpps" DROP CONSTRAINT IF EXISTS "fk_dpps_creator"`);
        await queryRunner.query(`ALTER TABLE "dpps" DROP CONSTRAINT IF EXISTS "fk_dpps_client"`);
        await queryRunner.query(`DROP INDEX IF EXISTS "public"."idx_lot_factories_lot_id"`);
        await queryRunner.query(`DROP INDEX IF EXISTS "public"."idx_lot_factories_factory_id"`);
        await queryRunner.query(`DROP INDEX IF EXISTS "public"."uniq_lot_factories_lot_factory"`);
        await queryRunner.query(`DROP INDEX IF EXISTS "public"."uniq_lot_factory_roles_fact_role"`);
        await queryRunner.query(`DROP INDEX IF EXISTS "public"."uniq_factory_roles_factory_role"`);
        await queryRunner.query(`DROP INDEX IF EXISTS "public"."idx_defects_type"`);
        await queryRunner.query(`DROP INDEX IF EXISTS "public"."idx_activities_lot_ts"`);
        await queryRunner.query(`DROP INDEX IF EXISTS "public"."idx_reports_client_month"`);
        await queryRunner.query(`DROP INDEX IF EXISTS "public"."idx_lots_client_status"`);
        await queryRunner.query(`DROP INDEX IF EXISTS "public"."idx_lots_factory"`);
        await queryRunner.query(`DROP INDEX IF EXISTS "public"."idx_user_roles_user"`);
        await queryRunner.query(`ALTER TABLE "user_roles" DROP CONSTRAINT IF EXISTS "uq_user_role"`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT IF EXISTS "uq_users_client_email"`);
        await queryRunner.query(`CREATE TABLE IF NOT EXISTS "factory_certifications" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "factory_id" uuid NOT NULL, "certification" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_d2383a92f752e8f5bc3f3adc48b" UNIQUE ("factory_id", "certification"), CONSTRAINT "PK_12516e7126cc27e33c1a49788bd" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "lots" ADD COLUMN IF NOT EXISTS "material_composition" jsonb`);
        await queryRunner.query(`COMMENT ON COLUMN "lots"."material_composition" IS 'Array of materials with fiber type, percentage, and optional properties'`);
        await queryRunner.query(`ALTER TABLE "lots" ADD COLUMN IF NOT EXISTS "dye_lot" character varying(120)`);
        await queryRunner.query(`COMMENT ON COLUMN "lots"."dye_lot" IS 'Dye lot identifier for traceability'`);
        await queryRunner.query(`ALTER TABLE "lots" ADD COLUMN IF NOT EXISTS "certifications" jsonb`);
        await queryRunner.query(`COMMENT ON COLUMN "lots"."certifications" IS 'Array of certifications with type, number, and audit links'`);
        await queryRunner.query(`ALTER TABLE "lots" ADD COLUMN IF NOT EXISTS "dpp_metadata" jsonb`);
        await queryRunner.query(`COMMENT ON COLUMN "lots"."dpp_metadata" IS 'Additional DPP-specific metadata'`);
        await queryRunner.query(`ALTER TABLE "lot_factories" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "lot_factories" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "lot_factories" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "lot_factories" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "lot_factory_roles" DROP COLUMN "notes"`);
        await queryRunner.query(`ALTER TABLE "lot_factory_roles" ADD "notes" character varying`);
        await queryRunner.query(`ALTER TABLE "lot_factory_roles" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "lot_factory_roles" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "lot_factory_roles" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "lot_factory_roles" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" DROP CONSTRAINT "UQ_2f2cc765582446a9fab4ac22e05"`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" DROP COLUMN "key"`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" ADD "key" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" ADD CONSTRAINT "UQ_2f2cc765582446a9fab4ac22e05" UNIQUE ("key")`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" ADD "name" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" DROP COLUMN "description"`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" ADD "description" character varying`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "factory_roles" DROP COLUMN "notes"`);
        await queryRunner.query(`ALTER TABLE "factory_roles" ADD "notes" character varying`);
        await queryRunner.query(`ALTER TABLE "factory_roles" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "factory_roles" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "factory_roles" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "factory_roles" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "factories" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "factories" ADD "name" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "factories" DROP COLUMN "city"`);
        await queryRunner.query(`ALTER TABLE "factories" ADD "city" character varying(120)`);
        await queryRunner.query(`ALTER TABLE "factories" DROP COLUMN "country"`);
        await queryRunner.query(`ALTER TABLE "factories" ADD "country" character varying(2) NOT NULL DEFAULT 'PT'`);
        await queryRunner.query(`ALTER TABLE "factories" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "factories" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "factories" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "factories" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "defect_types" DROP CONSTRAINT "defect_types_name_key"`);
        await queryRunner.query(`ALTER TABLE "defect_types" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "defect_types" ADD "name" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "defect_types" ADD CONSTRAINT "UQ_e7312ad90c98550ad6614f9e8da" UNIQUE ("name")`);
        await queryRunner.query(`ALTER TABLE "defect_types" DROP COLUMN "category"`);
        await queryRunner.query(`ALTER TABLE "defect_types" ADD "category" character varying`);
        await queryRunner.query(`ALTER TABLE "defect_types" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "defect_types" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "defect_types" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "defect_types" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "photos" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "photos" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "photos" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "photos" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "defects" DROP COLUMN "piece_code"`);
        await queryRunner.query(`ALTER TABLE "defects" ADD "piece_code" character varying(120)`);
        await queryRunner.query(`ALTER TABLE "defects" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "defects" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "defects" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "defects" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "inspections" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "inspections" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "inspections" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "inspections" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "approvals" DROP COLUMN "decision"`);
        await queryRunner.query(`CREATE TYPE "public"."approvals_decision_enum" AS ENUM('APPROVE', 'REJECT')`);
        await queryRunner.query(`ALTER TABLE "approvals" ADD "decision" "public"."approvals_decision_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "approvals" ALTER COLUMN "decided_at" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "approvals" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "approvals" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "approvals" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "approvals" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "activities" DROP COLUMN "ts"`);
        await queryRunner.query(`ALTER TABLE "activities" ADD "ts" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "type"`);
        await queryRunner.query(`CREATE TYPE "public"."reports_type_enum" AS ENUM('MONTHLY_SCORECARD', 'LOT')`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "type" "public"."reports_type_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "status"`);
        await queryRunner.query(`CREATE TYPE "public"."reports_status_enum" AS ENUM('PENDING', 'READY', 'FAILED')`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "status" "public"."reports_status_enum" NOT NULL DEFAULT 'PENDING'`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "lots" DROP COLUMN "style_ref"`);
        await queryRunner.query(`ALTER TABLE "lots" ADD "style_ref" character varying(120) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "lots" DROP COLUMN "status"`);
        await queryRunner.query(`CREATE TYPE "public"."lots_status_enum" AS ENUM('PLANNED', 'IN_PRODUCTION', 'INSPECTION', 'PENDING_APPROVAL', 'APPROVED', 'REJECTED', 'SHIPPED')`);
        await queryRunner.query(`ALTER TABLE "lots" ADD "status" "public"."lots_status_enum" NOT NULL DEFAULT 'PLANNED'`);
        await queryRunner.query(`ALTER TABLE "lots" ALTER COLUMN "defect_rate" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "lots" ALTER COLUMN "inspected_progress" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "lots" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "lots" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "lots" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "lots" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "events" DROP COLUMN "type"`);
        await queryRunner.query(`CREATE TYPE "public"."events_type_enum" AS ENUM('DEFECT_DETECTED', 'LOT_AWAITING_APPROVAL', 'LOT_DECIDED')`);
        await queryRunner.query(`ALTER TABLE "events" ADD "type" "public"."events_type_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "events" ALTER COLUMN "payload" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "events" ALTER COLUMN "payload" SET DEFAULT '{}'`);
        await queryRunner.query(`ALTER TABLE "events" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "events" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "clients" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "clients" ADD "name" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "clients" DROP CONSTRAINT "clients_slug_key"`);
        await queryRunner.query(`ALTER TABLE "clients" DROP COLUMN "slug"`);
        await queryRunner.query(`ALTER TABLE "clients" ADD "slug" character varying(120) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "clients" ADD CONSTRAINT "UQ_2a850b0972b11500683fe49b3c4" UNIQUE ("slug")`);
        await queryRunner.query(`ALTER TABLE "clients" DROP COLUMN "logo_url"`);
        await queryRunner.query(`ALTER TABLE "clients" ADD "logo_url" character varying`);
        await queryRunner.query(`ALTER TABLE "clients" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "clients" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "clients" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "clients" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "roles" DROP CONSTRAINT "roles_name_key"`);
        await queryRunner.query(`ALTER TABLE "roles" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "roles" ADD "name" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "roles" ADD CONSTRAINT "UQ_648e3f5447f725579d7d4ffdfb7" UNIQUE ("name")`);
        await queryRunner.query(`ALTER TABLE "roles" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "roles" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "roles" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "roles" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "user_roles" ALTER COLUMN "is_primary" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_roles" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "user_roles" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "user_roles" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "user_roles" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "email"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "email" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "password_hash"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "password_hash" character varying(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "is_active" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "notifications" DROP COLUMN "client_id"`);
        await queryRunner.query(`ALTER TABLE "notifications" ADD "client_id" character varying`);
        await queryRunner.query(`ALTER TABLE "notifications" DROP COLUMN "user_id"`);
        await queryRunner.query(`ALTER TABLE "notifications" ADD "user_id" character varying`);
        await queryRunner.query(`ALTER TABLE "notifications" ALTER COLUMN "status" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "notifications" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "notifications" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "notifications" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "notifications" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "audit_log" DROP COLUMN "entity"`);
        await queryRunner.query(`ALTER TABLE "audit_log" ADD "entity" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "audit_log" DROP COLUMN "entity_id"`);
        await queryRunner.query(`ALTER TABLE "audit_log" ADD "entity_id" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "audit_log" DROP COLUMN "action"`);
        await queryRunner.query(`ALTER TABLE "audit_log" ADD "action" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "audit_log" DROP COLUMN "ts"`);
        await queryRunner.query(`ALTER TABLE "audit_log" ADD "ts" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "lot_factories" ADD CONSTRAINT "UQ_4b42cf590074197a1b727acd0a3" UNIQUE ("lot_id", "factory_id")`);
        await queryRunner.query(`ALTER TABLE "lot_factory_roles" ADD CONSTRAINT "UQ_978d451ccde771ce889a944832a" UNIQUE ("lot_factory_id", "role_id")`);
        await queryRunner.query(`ALTER TABLE "factory_roles" ADD CONSTRAINT "UQ_5f509b21da69e3a377ceb6e3dca" UNIQUE ("factory_id", "role_id")`);
        await queryRunner.query(`ALTER TABLE "user_roles" ADD CONSTRAINT "UQ_23ed6f04fe43066df08379fd034" UNIQUE ("user_id", "role_id")`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "UQ_c939118cb5d8f30edc66a626a7b" UNIQUE ("client_id", "email")`);
        await queryRunner.query(`ALTER TABLE "factory_certifications" ADD CONSTRAINT "FK_9731938c748101e7f4d4b1a118a" FOREIGN KEY ("factory_id") REFERENCES "factories"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "factories" ADD CONSTRAINT "FK_39fa445253769a08081a8b9485c" FOREIGN KEY ("client_id") REFERENCES "clients"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "photos" ADD CONSTRAINT "FK_992e74d0c936c34f5e43b844259" FOREIGN KEY ("defect_id") REFERENCES "defects"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "defects" ADD CONSTRAINT "FK_4ce8bd137e020c3c843df2f1e2a" FOREIGN KEY ("inspection_id") REFERENCES "inspections"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "defects" ADD CONSTRAINT "FK_3dea2797377515adfee132358ba" FOREIGN KEY ("defect_type_id") REFERENCES "defect_types"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "inspections" ADD CONSTRAINT "FK_ae09f142a5cfb32324d3ef084d7" FOREIGN KEY ("lot_id") REFERENCES "lots"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "inspections" ADD CONSTRAINT "FK_be0708872a150482d84fafdf5ca" FOREIGN KEY ("inspector_id") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "approvals" ADD CONSTRAINT "FK_fbeefb6072cbf5161fec58b1c36" FOREIGN KEY ("lot_id") REFERENCES "lots"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "approvals" ADD CONSTRAINT "FK_6424e5974a58f747eaae00e7163" FOREIGN KEY ("approved_by") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "activities" ADD CONSTRAINT "FK_b79dacbbdd92259182f873944ed" FOREIGN KEY ("lot_id") REFERENCES "lots"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reports" ADD CONSTRAINT "FK_bda44e16992191ff11ad8da01e2" FOREIGN KEY ("client_id") REFERENCES "clients"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reports" ADD CONSTRAINT "FK_875b7b8cbdbc9155c34561135bf" FOREIGN KEY ("lot_id") REFERENCES "lots"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "lots" ADD CONSTRAINT "FK_52222ad1e6660451b31ea7e5780" FOREIGN KEY ("client_id") REFERENCES "clients"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "lots" ADD CONSTRAINT "FK_8e738387523ad9133f3f5ee2617" FOREIGN KEY ("factory_id") REFERENCES "factories"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "events" ADD CONSTRAINT "FK_b4ea5a78d656e3c29835bf644e6" FOREIGN KEY ("client_id") REFERENCES "clients"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "events" ADD CONSTRAINT "FK_8cebe14c096d6b4340d9046fe91" FOREIGN KEY ("lot_id") REFERENCES "lots"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_roles" ADD CONSTRAINT "FK_87b8888186ca9769c960e926870" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_roles" ADD CONSTRAINT "FK_b23c65e50a758245a33ee35fda1" FOREIGN KEY ("role_id") REFERENCES "roles"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "FK_0d1e90d75674c54f8660c4ed446" FOREIGN KEY ("client_id") REFERENCES "clients"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "dpp_events" ADD CONSTRAINT "FK_05fbad8a3a5dafac29d6dea64b7" FOREIGN KEY ("dpp_id") REFERENCES "dpps"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "dpp_access_logs" ADD CONSTRAINT "FK_5eb01403cdb0e3b814011ea5ee5" FOREIGN KEY ("dpp_id") REFERENCES "dpps"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "dpps" ADD CONSTRAINT "FK_8b619ab36496e04c1d67bfbc643" FOREIGN KEY ("client_id") REFERENCES "clients"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "dpps" ADD CONSTRAINT "FK_84cfbc26f63b938fadc8375b023" FOREIGN KEY ("created_by") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "dpps" DROP CONSTRAINT "FK_84cfbc26f63b938fadc8375b023"`);
        await queryRunner.query(`ALTER TABLE "dpps" DROP CONSTRAINT "FK_8b619ab36496e04c1d67bfbc643"`);
        await queryRunner.query(`ALTER TABLE "dpp_access_logs" DROP CONSTRAINT "FK_5eb01403cdb0e3b814011ea5ee5"`);
        await queryRunner.query(`ALTER TABLE "dpp_events" DROP CONSTRAINT "FK_05fbad8a3a5dafac29d6dea64b7"`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "FK_0d1e90d75674c54f8660c4ed446"`);
        await queryRunner.query(`ALTER TABLE "user_roles" DROP CONSTRAINT "FK_b23c65e50a758245a33ee35fda1"`);
        await queryRunner.query(`ALTER TABLE "user_roles" DROP CONSTRAINT "FK_87b8888186ca9769c960e926870"`);
        await queryRunner.query(`ALTER TABLE "events" DROP CONSTRAINT "FK_8cebe14c096d6b4340d9046fe91"`);
        await queryRunner.query(`ALTER TABLE "events" DROP CONSTRAINT "FK_b4ea5a78d656e3c29835bf644e6"`);
        await queryRunner.query(`ALTER TABLE "lots" DROP CONSTRAINT "FK_8e738387523ad9133f3f5ee2617"`);
        await queryRunner.query(`ALTER TABLE "lots" DROP CONSTRAINT "FK_52222ad1e6660451b31ea7e5780"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP CONSTRAINT "FK_875b7b8cbdbc9155c34561135bf"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP CONSTRAINT "FK_bda44e16992191ff11ad8da01e2"`);
        await queryRunner.query(`ALTER TABLE "activities" DROP CONSTRAINT "FK_b79dacbbdd92259182f873944ed"`);
        await queryRunner.query(`ALTER TABLE "approvals" DROP CONSTRAINT "FK_6424e5974a58f747eaae00e7163"`);
        await queryRunner.query(`ALTER TABLE "approvals" DROP CONSTRAINT "FK_fbeefb6072cbf5161fec58b1c36"`);
        await queryRunner.query(`ALTER TABLE "inspections" DROP CONSTRAINT "FK_be0708872a150482d84fafdf5ca"`);
        await queryRunner.query(`ALTER TABLE "inspections" DROP CONSTRAINT "FK_ae09f142a5cfb32324d3ef084d7"`);
        await queryRunner.query(`ALTER TABLE "defects" DROP CONSTRAINT "FK_3dea2797377515adfee132358ba"`);
        await queryRunner.query(`ALTER TABLE "defects" DROP CONSTRAINT "FK_4ce8bd137e020c3c843df2f1e2a"`);
        await queryRunner.query(`ALTER TABLE "photos" DROP CONSTRAINT "FK_992e74d0c936c34f5e43b844259"`);
        await queryRunner.query(`ALTER TABLE "factories" DROP CONSTRAINT "FK_39fa445253769a08081a8b9485c"`);
        await queryRunner.query(`ALTER TABLE "factory_certifications" DROP CONSTRAINT "FK_9731938c748101e7f4d4b1a118a"`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "UQ_c939118cb5d8f30edc66a626a7b"`);
        await queryRunner.query(`ALTER TABLE "user_roles" DROP CONSTRAINT "UQ_23ed6f04fe43066df08379fd034"`);
        await queryRunner.query(`ALTER TABLE "factory_roles" DROP CONSTRAINT "UQ_5f509b21da69e3a377ceb6e3dca"`);
        await queryRunner.query(`ALTER TABLE "lot_factory_roles" DROP CONSTRAINT "UQ_978d451ccde771ce889a944832a"`);
        await queryRunner.query(`ALTER TABLE "lot_factories" DROP CONSTRAINT "UQ_4b42cf590074197a1b727acd0a3"`);
        await queryRunner.query(`ALTER TABLE "audit_log" DROP COLUMN "ts"`);
        await queryRunner.query(`ALTER TABLE "audit_log" ADD "ts" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "audit_log" DROP COLUMN "action"`);
        await queryRunner.query(`ALTER TABLE "audit_log" ADD "action" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "audit_log" DROP COLUMN "entity_id"`);
        await queryRunner.query(`ALTER TABLE "audit_log" ADD "entity_id" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "audit_log" DROP COLUMN "entity"`);
        await queryRunner.query(`ALTER TABLE "audit_log" ADD "entity" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "notifications" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "notifications" ADD "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "notifications" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "notifications" ADD "created_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "notifications" ALTER COLUMN "status" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "notifications" DROP COLUMN "user_id"`);
        await queryRunner.query(`ALTER TABLE "notifications" ADD "user_id" uuid`);
        await queryRunner.query(`ALTER TABLE "notifications" DROP COLUMN "client_id"`);
        await queryRunner.query(`ALTER TABLE "notifications" ADD "client_id" uuid`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "created_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "is_active" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "password_hash"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "password_hash" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "email"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "email" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_roles" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "user_roles" ADD "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "user_roles" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "user_roles" ADD "created_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "user_roles" ALTER COLUMN "is_primary" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "roles" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "roles" ADD "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "roles" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "roles" ADD "created_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "roles" DROP CONSTRAINT "UQ_648e3f5447f725579d7d4ffdfb7"`);
        await queryRunner.query(`ALTER TABLE "roles" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "roles" ADD "name" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "roles" ADD CONSTRAINT "roles_name_key" UNIQUE ("name")`);
        await queryRunner.query(`ALTER TABLE "clients" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "clients" ADD "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "clients" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "clients" ADD "created_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "clients" DROP COLUMN "logo_url"`);
        await queryRunner.query(`ALTER TABLE "clients" ADD "logo_url" text`);
        await queryRunner.query(`ALTER TABLE "clients" DROP CONSTRAINT "UQ_2a850b0972b11500683fe49b3c4"`);
        await queryRunner.query(`ALTER TABLE "clients" DROP COLUMN "slug"`);
        await queryRunner.query(`ALTER TABLE "clients" ADD "slug" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "clients" ADD CONSTRAINT "clients_slug_key" UNIQUE ("slug")`);
        await queryRunner.query(`ALTER TABLE "clients" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "clients" ADD "name" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "events" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "events" ADD "created_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "events" ALTER COLUMN "payload" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "events" ALTER COLUMN "payload" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "events" DROP COLUMN "type"`);
        await queryRunner.query(`DROP TYPE "public"."events_type_enum"`);
        await queryRunner.query(`ALTER TABLE "events" ADD "type" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "lots" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "lots" ADD "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "lots" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "lots" ADD "created_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "lots" ALTER COLUMN "inspected_progress" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "lots" ALTER COLUMN "defect_rate" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "lots" DROP COLUMN "status"`);
        await queryRunner.query(`DROP TYPE "public"."lots_status_enum"`);
        await queryRunner.query(`ALTER TABLE "lots" ADD "status" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "lots" DROP COLUMN "style_ref"`);
        await queryRunner.query(`ALTER TABLE "lots" ADD "style_ref" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "created_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "status"`);
        await queryRunner.query(`DROP TYPE "public"."reports_status_enum"`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "status" text DEFAULT 'PENDING'`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "type"`);
        await queryRunner.query(`DROP TYPE "public"."reports_type_enum"`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "type" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "activities" DROP COLUMN "ts"`);
        await queryRunner.query(`ALTER TABLE "activities" ADD "ts" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "approvals" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "approvals" ADD "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "approvals" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "approvals" ADD "created_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "approvals" ALTER COLUMN "decided_at" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "approvals" DROP COLUMN "decision"`);
        await queryRunner.query(`DROP TYPE "public"."approvals_decision_enum"`);
        await queryRunner.query(`ALTER TABLE "approvals" ADD "decision" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "inspections" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "inspections" ADD "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "inspections" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "inspections" ADD "created_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "defects" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "defects" ADD "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "defects" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "defects" ADD "created_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "defects" DROP COLUMN "piece_code"`);
        await queryRunner.query(`ALTER TABLE "defects" ADD "piece_code" text`);
        await queryRunner.query(`ALTER TABLE "photos" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "photos" ADD "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "photos" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "photos" ADD "created_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "defect_types" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "defect_types" ADD "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "defect_types" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "defect_types" ADD "created_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "defect_types" DROP COLUMN "category"`);
        await queryRunner.query(`ALTER TABLE "defect_types" ADD "category" text`);
        await queryRunner.query(`ALTER TABLE "defect_types" DROP CONSTRAINT "UQ_e7312ad90c98550ad6614f9e8da"`);
        await queryRunner.query(`ALTER TABLE "defect_types" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "defect_types" ADD "name" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "defect_types" ADD CONSTRAINT "defect_types_name_key" UNIQUE ("name")`);
        await queryRunner.query(`ALTER TABLE "factories" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "factories" ADD "updated_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "factories" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "factories" ADD "created_at" TIMESTAMP WITH TIME ZONE DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "factories" DROP COLUMN "country"`);
        await queryRunner.query(`ALTER TABLE "factories" ADD "country" text DEFAULT 'PT'`);
        await queryRunner.query(`ALTER TABLE "factories" DROP COLUMN "city"`);
        await queryRunner.query(`ALTER TABLE "factories" ADD "city" text`);
        await queryRunner.query(`ALTER TABLE "factories" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "factories" ADD "name" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "factory_roles" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "factory_roles" ADD "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "factory_roles" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "factory_roles" ADD "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "factory_roles" DROP COLUMN "notes"`);
        await queryRunner.query(`ALTER TABLE "factory_roles" ADD "notes" text`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" ADD "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" ADD "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" DROP COLUMN "description"`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" ADD "description" text`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" ADD "name" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" DROP CONSTRAINT "UQ_2f2cc765582446a9fab4ac22e05"`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" DROP COLUMN "key"`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" ADD "key" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "supply_chain_roles" ADD CONSTRAINT "UQ_2f2cc765582446a9fab4ac22e05" UNIQUE ("key")`);
        await queryRunner.query(`ALTER TABLE "lot_factory_roles" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "lot_factory_roles" ADD "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "lot_factory_roles" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "lot_factory_roles" ADD "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "lot_factory_roles" DROP COLUMN "notes"`);
        await queryRunner.query(`ALTER TABLE "lot_factory_roles" ADD "notes" text`);
        await queryRunner.query(`ALTER TABLE "lot_factories" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "lot_factories" ADD "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "lot_factories" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "lot_factories" ADD "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()`);
        await queryRunner.query(`COMMENT ON COLUMN "lots"."dpp_metadata" IS 'Additional DPP-specific metadata'`);
        await queryRunner.query(`ALTER TABLE "lots" DROP COLUMN "dpp_metadata"`);
        await queryRunner.query(`COMMENT ON COLUMN "lots"."certifications" IS 'Array of certifications with type, number, and audit links'`);
        await queryRunner.query(`ALTER TABLE "lots" DROP COLUMN "certifications"`);
        await queryRunner.query(`COMMENT ON COLUMN "lots"."dye_lot" IS 'Dye lot identifier for traceability'`);
        await queryRunner.query(`ALTER TABLE "lots" DROP COLUMN "dye_lot"`);
        await queryRunner.query(`COMMENT ON COLUMN "lots"."material_composition" IS 'Array of materials with fiber type, percentage, and optional properties'`);
        await queryRunner.query(`ALTER TABLE "lots" DROP COLUMN "material_composition"`);
        await queryRunner.query(`DROP TABLE "factory_certifications"`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "uq_users_client_email" UNIQUE ("client_id", "email")`);
        await queryRunner.query(`ALTER TABLE "user_roles" ADD CONSTRAINT "uq_user_role" UNIQUE ("user_id", "role_id")`);
        await queryRunner.query(`CREATE INDEX "idx_user_roles_user" ON "user_roles" ("user_id") `);
        await queryRunner.query(`CREATE INDEX "idx_lots_factory" ON "lots" ("factory_id") `);
        await queryRunner.query(`CREATE INDEX "idx_lots_client_status" ON "lots" ("client_id", "status") `);
        await queryRunner.query(`CREATE INDEX "idx_reports_client_month" ON "reports" ("client_id", "month") `);
        await queryRunner.query(`CREATE INDEX "idx_activities_lot_ts" ON "activities" ("lot_id", "ts") `);
        await queryRunner.query(`CREATE INDEX "idx_defects_type" ON "defects" ("defect_type_id") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "uniq_factory_roles_factory_role" ON "factory_roles" ("factory_id", "role_id") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "uniq_lot_factory_roles_fact_role" ON "lot_factory_roles" ("lot_factory_id", "role_id") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "uniq_lot_factories_lot_factory" ON "lot_factories" ("lot_id", "factory_id") `);
        await queryRunner.query(`CREATE INDEX "idx_lot_factories_factory_id" ON "lot_factories" ("factory_id") `);
        await queryRunner.query(`CREATE INDEX "idx_lot_factories_lot_id" ON "lot_factories" ("lot_id") `);
        await queryRunner.query(`ALTER TABLE "dpps" ADD CONSTRAINT "fk_dpps_client" FOREIGN KEY ("client_id") REFERENCES "clients"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "dpps" ADD CONSTRAINT "fk_dpps_creator" FOREIGN KEY ("created_by") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "dpp_access_logs" ADD CONSTRAINT "fk_dpp_access_logs_dpp" FOREIGN KEY ("dpp_id") REFERENCES "dpps"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "dpp_events" ADD CONSTRAINT "fk_dpp_events_dpp" FOREIGN KEY ("dpp_id") REFERENCES "dpps"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "notifications" ADD CONSTRAINT "notifications_client_id_fkey" FOREIGN KEY ("client_id") REFERENCES "clients"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "notifications" ADD CONSTRAINT "notifications_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "users_client_id_fkey" FOREIGN KEY ("client_id") REFERENCES "clients"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_roles" ADD CONSTRAINT "user_roles_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_roles" ADD CONSTRAINT "user_roles_role_id_fkey" FOREIGN KEY ("role_id") REFERENCES "roles"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "events" ADD CONSTRAINT "events_client_id_fkey" FOREIGN KEY ("client_id") REFERENCES "clients"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "events" ADD CONSTRAINT "events_lot_id_fkey" FOREIGN KEY ("lot_id") REFERENCES "lots"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "lots" ADD CONSTRAINT "lots_client_id_fkey" FOREIGN KEY ("client_id") REFERENCES "clients"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "lots" ADD CONSTRAINT "lots_factory_id_fkey" FOREIGN KEY ("factory_id") REFERENCES "factories"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reports" ADD CONSTRAINT "reports_client_id_fkey" FOREIGN KEY ("client_id") REFERENCES "clients"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reports" ADD CONSTRAINT "reports_lot_id_fkey" FOREIGN KEY ("lot_id") REFERENCES "lots"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "activities" ADD CONSTRAINT "activities_lot_id_fkey" FOREIGN KEY ("lot_id") REFERENCES "lots"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "approvals" ADD CONSTRAINT "approvals_lot_id_fkey" FOREIGN KEY ("lot_id") REFERENCES "lots"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "approvals" ADD CONSTRAINT "approvals_approved_by_fkey" FOREIGN KEY ("approved_by") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "inspections" ADD CONSTRAINT "inspections_lot_id_fkey" FOREIGN KEY ("lot_id") REFERENCES "lots"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "inspections" ADD CONSTRAINT "inspections_inspector_id_fkey" FOREIGN KEY ("inspector_id") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "defects" ADD CONSTRAINT "defects_inspection_id_fkey" FOREIGN KEY ("inspection_id") REFERENCES "inspections"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "defects" ADD CONSTRAINT "defects_defect_type_id_fkey" FOREIGN KEY ("defect_type_id") REFERENCES "defect_types"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "photos" ADD CONSTRAINT "photos_defect_id_fkey" FOREIGN KEY ("defect_id") REFERENCES "defects"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "factories" ADD CONSTRAINT "factories_client_id_fkey" FOREIGN KEY ("client_id") REFERENCES "clients"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
    }

}
